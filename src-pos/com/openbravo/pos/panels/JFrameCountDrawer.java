/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.openbravo.pos.panels;

import com.openbravo.beans.JCalendarDialog;
import com.openbravo.data.gui.MessageInf;
import com.openbravo.pos.panels.PaymentsModel.DrawerLine;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.JTextField;

/**
 *
 * @author Blake
 */
public class JFrameCountDrawer extends javax.swing.JFrame {

    private static Connection con;
    private String username;
    private String oldText;
    private double totalSOD, totalEOD, cashSales, m_bankDeposit, m_closingTotals;
    private boolean EODset = false;
    private boolean SODset = false;
    private int EODid,SODid;
    private PaymentsModel pm;
    ResultSet rs;
    String SQL;
    Statement stmt;    
    /**
     * Creates new form JFrameCountDrawer
     * @param c
     * @param name
     * @param pm
     */
    public JFrameCountDrawer(Connection c, String name, PaymentsModel pm) {
        JFrameCountDrawer.con = c;
        this.username = name;
        this.pm = pm;

        calcCashSales();
        initComponents();
        checkForSOD();
        checkForEOD();
        getRootPane().setWindowDecorationStyle(JRootPane.NONE);
        this.calcTotals();
    }
    
    private void calcCashSales()
    {
        for(int i = 0; i < pm.getPaymentLines().size(); i++)
        {
            if(pm.getPaymentLines().get(i).getType().contains("cash")) {
                cashSales += pm.getPaymentLines().get(i).getValue();
                System.out.println("Cash Sales: " + cashSales);
                this.setTitle("Total Cash Sales: $" + cashSales);
            }
        }
    }

    private JFrameCountDrawer(Connection con) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        varienceAmt = new javax.swing.JLabel();
        tabbedPanel = new javax.swing.JTabbedPane();
        sodPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        sod_coin1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        sod_coin5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        sod_coin10 = new javax.swing.JTextField();
        sod_coin25 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sod_roll1 = new javax.swing.JTextField();
        sod_roll5 = new javax.swing.JTextField();
        sod_roll10 = new javax.swing.JTextField();
        sod_roll25 = new javax.swing.JTextField();
        totalCash = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        sod_bill1 = new javax.swing.JTextField();
        sod_bill5 = new javax.swing.JTextField();
        sod_bill10 = new javax.swing.JTextField();
        sod_bill20 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        sod_bill50 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        sod_bill100 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        eodPanel = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        eod_coin1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        eod_coin5 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        eod_coin10 = new javax.swing.JTextField();
        eod_coin25 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        eod_roll1 = new javax.swing.JTextField();
        eod_roll5 = new javax.swing.JTextField();
        eod_roll10 = new javax.swing.JTextField();
        eod_roll25 = new javax.swing.JTextField();
        totalCash1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        eod_bill1 = new javax.swing.JTextField();
        eod_bill5 = new javax.swing.JTextField();
        eod_bill10 = new javax.swing.JTextField();
        eod_bill20 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        eod_bill50 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        eod_bill100 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        bankDeposit_Field = new javax.swing.JTextField();
        acceptButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        dateButton = new javax.swing.JButton();
        lastSOD = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        varienceAmt.setText("Variance: ");

        tabbedPanel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabbedPanelFocusGained(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Coins"));

        jLabel7.setText("0.10");

        sod_coin1.setText("0");
        sod_coin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        sod_coin1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_coin1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        jLabel5.setText("0.01");

        sod_coin5.setText("0");
        sod_coin5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        sod_coin5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_coin5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        jLabel6.setText("0.05");

        sod_coin10.setText("0");
        sod_coin10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        sod_coin10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_coin10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        sod_coin25.setText("0");
        sod_coin25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        sod_coin25.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_coin25.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        jLabel8.setText("0.25");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sod_coin25))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jLabel7)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(sod_coin10))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jLabel6)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(sod_coin5))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jLabel5)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(sod_coin1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(sod_coin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(sod_coin5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(sod_coin10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(sod_coin25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Rolls"));

        jLabel1.setText("0.01 (50c)");

        jLabel2.setText("0.05 ($2)");

        jLabel3.setText("0.10 ($5)");

        jLabel4.setText("0.25 ($10)");

        sod_roll1.setText("0");
        sod_roll1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        sod_roll1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_roll1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        sod_roll5.setText("0");
        sod_roll5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        sod_roll5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_roll5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        sod_roll10.setText("0");
        sod_roll10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_roll10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        sod_roll25.setText("0");
        sod_roll25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        sod_roll25.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_roll25.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sod_roll25))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sod_roll10))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sod_roll5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sod_roll1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sod_roll1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(sod_roll5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(sod_roll10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(sod_roll25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        totalCash.setText("0.00");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Bills"));

        jLabel9.setText("1.00");

        jLabel10.setText("5.00");

        jLabel11.setText("10.00");

        jLabel12.setText("20.00");

        sod_bill1.setText("0");
        sod_bill1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        sod_bill1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_bill1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        sod_bill5.setText("0");
        sod_bill5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        sod_bill5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_bill5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        sod_bill10.setText("0");
        sod_bill10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        sod_bill10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_bill10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        sod_bill20.setText("0");
        sod_bill20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        sod_bill20.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_bill20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        jLabel13.setText("50.00");

        sod_bill50.setText("0");
        sod_bill50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        sod_bill50.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_bill50.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        jLabel14.setText("100.00");

        sod_bill100.setText("0");
        sod_bill100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        sod_bill100.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        sod_bill100.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                    .addComponent(jLabel14)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(sod_bill100))
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                    .addComponent(jLabel13)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(sod_bill50))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sod_bill20, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sod_bill5))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sod_bill1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sod_bill10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(sod_bill1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(sod_bill5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(sod_bill10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(sod_bill20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(sod_bill50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(sod_bill100, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jLabel15.setText("Total: $");

        javax.swing.GroupLayout sodPanelLayout = new javax.swing.GroupLayout(sodPanel);
        sodPanel.setLayout(sodPanelLayout);
        sodPanelLayout.setHorizontalGroup(
            sodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sodPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(sodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(sodPanelLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81))
                    .addGroup(sodPanelLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalCash)
                        .addGap(174, 174, 174))))
        );
        sodPanelLayout.setVerticalGroup(
            sodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sodPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(sodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(sodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalCash)))
        );

        tabbedPanel.addTab("Start of Day", sodPanel);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Coins"));

        jLabel16.setText("0.10");

        eod_coin1.setText("0");
        eod_coin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_coin1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_coin1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        jLabel17.setText("0.01");

        eod_coin5.setText("0");
        eod_coin5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_coin5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_coin5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        jLabel18.setText("0.05");

        eod_coin10.setText("0");
        eod_coin10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_coin10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_coin10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        eod_coin25.setText("0");
        eod_coin25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_coin25.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_coin25.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        jLabel19.setText("0.25");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eod_coin25, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addComponent(jLabel16)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(eod_coin10))
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addComponent(jLabel18)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(eod_coin5))
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addComponent(jLabel17)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(eod_coin1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(eod_coin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(eod_coin5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(eod_coin10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(eod_coin25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rolls", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel20.setText("0.01 (50c)");

        jLabel21.setText("0.05 ($2)");

        jLabel22.setText("0.10 ($5)");

        jLabel23.setText("0.25 ($10)");

        eod_roll1.setText("0");
        eod_roll1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_roll1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_roll1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        eod_roll5.setText("0");
        eod_roll5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_roll5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_roll5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        eod_roll10.setText("0");
        eod_roll10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_roll10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_roll10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        eod_roll25.setText("0");
        eod_roll25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_roll25.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_roll25.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eod_roll25))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eod_roll10))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eod_roll5))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eod_roll1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(15, 15, 15))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(eod_roll1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(eod_roll5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(eod_roll10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(eod_roll25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        totalCash1.setText("0.00");

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Bills"));

        jLabel24.setText("1.00");

        jLabel25.setText("5.00");

        jLabel26.setText("10.00");

        jLabel27.setText("20.00");

        eod_bill1.setText("0");
        eod_bill1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_bill1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_bill1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        eod_bill5.setText("0");
        eod_bill5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_bill5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_bill5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        eod_bill10.setText("0");
        eod_bill10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_bill10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_bill10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        eod_bill20.setText("0");
        eod_bill20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_bill20.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_bill20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        jLabel28.setText("50.00");

        eod_bill50.setText("0");
        eod_bill50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_bill50.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_bill50.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        jLabel29.setText("100.00");

        eod_bill100.setText("0");
        eod_bill100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashFieldsActionPerformed(evt);
            }
        });
        eod_bill100.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        eod_bill100.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel29)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(eod_bill100))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel28)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(eod_bill50))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eod_bill20, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addComponent(jLabel25)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eod_bill5))
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addComponent(jLabel24)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eod_bill1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eod_bill10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(eod_bill1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(eod_bill5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(eod_bill10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(eod_bill20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(eod_bill50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(eod_bill100, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jLabel30.setText("Total: $");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Bank Deposit"));

        jLabel31.setText("Total: $");

        bankDeposit_Field.setText("0.00");
        bankDeposit_Field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashFieldfocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashFieldfocusLost(evt);
            }
        });
        bankDeposit_Field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bankDeposit_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(bankDeposit_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout eodPanelLayout = new javax.swing.GroupLayout(eodPanel);
        eodPanel.setLayout(eodPanelLayout);
        eodPanelLayout.setHorizontalGroup(
            eodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eodPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(eodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, eodPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(totalCash1)
                .addGap(178, 178, 178))
        );
        eodPanelLayout.setVerticalGroup(
            eodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eodPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(eodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(eodPanelLayout.createSequentialGroup()
                        .addGroup(eodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(eodPanelLayout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(eodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalCash1)))
        );

        tabbedPanel.addTab("End of Day", eodPanel);

        acceptButton.setText("Accept");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        dateButton.setText("Edit Different Day");
        dateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateButtonActionPerformed(evt);
            }
        });

        lastSOD.setText("Copy Last Day to Start of Day");
        lastSOD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastSODActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(varienceAmt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dateButton)
                        .addGap(18, 18, 18)
                        .addComponent(lastSOD)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tabbedPanel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateButton)
                    .addComponent(lastSOD))
                .addGap(21, 21, 21)
                .addComponent(tabbedPanel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(varienceAmt)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private double calcTotals()
    {
        return (Integer.parseInt(this.getRoll1())*0.50) +
                       (Integer.parseInt(this.getRoll5())*2) +
                       (Integer.parseInt(this.getRoll10())*5) +
                       (Integer.parseInt(this.getRoll25())*10) +
                       (Integer.parseInt(this.getCoin1())*0.01) +
                       (Integer.parseInt(this.getCoin5())*0.05) +
                       (Integer.parseInt(this.getCoin10())*0.10) +
                       (Integer.parseInt(this.getCoin25())*0.25) +
                       (Integer.parseInt(this.getBill1())*1.00) +
                       (Integer.parseInt(this.getBill5())*5.00) +
                       (Integer.parseInt(this.getBill10())*10.00) +
                       (Integer.parseInt(this.getBill20())*20.00) +
                       (Integer.parseInt(this.getBill50())*50.00) +
                       (Integer.parseInt(this.getBill100())*100.00);
    }
    
    private boolean allFieldsValid()
    {
      try
      {
          Integer.parseInt(this.getBill1());
          Integer.parseInt(this.getBill5());
          Integer.parseInt(this.getBill10());
          Integer.parseInt(this.getBill20());
          Integer.parseInt(this.getBill50());
          Integer.parseInt(this.getBill100());
          Integer.parseInt(this.getRoll1());
          Integer.parseInt(this.getRoll5());
          Integer.parseInt(this.getRoll10());
          Integer.parseInt(this.getRoll25());
          Integer.parseInt(this.getCoin1());
          Integer.parseInt(this.getCoin5());
          Integer.parseInt(this.getCoin10());
          Integer.parseInt(this.getCoin25());
      }
      catch(NumberFormatException e)
      {
          return false;
      }
      return true;
    }
    
    private boolean checkForSOD()
    {
        try
        {
            Calendar midnight = new GregorianCalendar();
            midnight.setTime(new Date());
            midnight.set(Calendar.HOUR_OF_DAY, 0);
            midnight.set(Calendar.MINUTE, 0);
            midnight.set(Calendar.SECOND, 0);
            midnight.set(Calendar.MILLISECOND, 0);
            java.sql.Timestamp currTime = new java.sql.Timestamp(midnight.getTimeInMillis());    
            SQL = "SELECT * FROM DRAWERFLOAT WHERE TIME > '"+ currTime+"' AND STARTOFDAY=1";
            stmt = (Statement) con.createStatement();      
            rs = stmt.executeQuery(SQL);
            
            if(!rs.next())
            {
                rs = null;
               return false; 
            }
            else
            {
                this.SODid = rs.getInt("ID");
                this.sod_roll1.setText(Integer.toString(rs.getInt("ROLL1")));
                this.sod_roll5.setText(Integer.toString(rs.getInt("ROLL5")));
                this.sod_roll10.setText(Integer.toString(rs.getInt("ROLL10")));
                this.sod_roll25.setText(Integer.toString(rs.getInt("ROLL25")));
                this.sod_coin1.setText(Integer.toString(rs.getInt("C1")));
                this.sod_coin5.setText(Integer.toString(rs.getInt("C5")));
                this.sod_coin10.setText(Integer.toString(rs.getInt("C10")));
                this.sod_coin25.setText(Integer.toString(rs.getInt("C25")));
                this.sod_bill1.setText(Integer.toString(rs.getInt("BILL1")));
                this.sod_bill5.setText(Integer.toString(rs.getInt("BILL5")));
                this.sod_bill10.setText(Integer.toString(rs.getInt("BILL10")));
                this.sod_bill20.setText(Integer.toString(rs.getInt("BILL20")));
                this.sod_bill50.setText(Integer.toString(rs.getInt("BILL50")));
                this.sod_bill100.setText(Integer.toString(rs.getInt("BILL100")));
                totalSOD = this.calcTotals();
                this.totalCash.setText(new DecimalFormat("#.00").format(totalSOD));
                this.setAllTotals();
                SODset = true;
                return true;
            }
        }
        catch(SQLException e)
        {
           MessageInf msg = new MessageInf(MessageInf.SGN_NOTICE, "There was an error getting Start of Day totals from the Database.", e);
                msg.show(this);
            return false;
        }
    }
    
    private boolean checkForEOD()
    {
        try
        {
            Calendar midnight = new GregorianCalendar();
            midnight.setTime(new Date());
            midnight.set(Calendar.HOUR_OF_DAY, 0);
            midnight.set(Calendar.MINUTE, 0);
            midnight.set(Calendar.SECOND, 0);
            midnight.set(Calendar.MILLISECOND, 0);
            java.sql.Timestamp currTime = new java.sql.Timestamp(midnight.getTimeInMillis());    
            SQL = "SELECT * FROM DRAWERFLOAT WHERE TIME > '"+ currTime+"' AND STARTOFDAY=0";
            stmt = (Statement) con.createStatement();      
            rs = stmt.executeQuery(SQL);
            
            if(!rs.next())
            {
                rs = null;
               return false; 
            }
            else
            {
                this.EODid = rs.getInt("ID");
                this.eod_roll1.setText(Integer.toString(rs.getInt("ROLL1")));
                this.eod_roll5.setText(Integer.toString(rs.getInt("ROLL5")));
                this.eod_roll10.setText(Integer.toString(rs.getInt("ROLL10")));
                this.eod_roll25.setText(Integer.toString(rs.getInt("ROLL25")));
                this.eod_coin1.setText(Integer.toString(rs.getInt("C1")));
                this.eod_coin5.setText(Integer.toString(rs.getInt("C5")));
                this.eod_coin10.setText(Integer.toString(rs.getInt("C10")));
                this.eod_coin25.setText(Integer.toString(rs.getInt("C25")));
                this.eod_bill1.setText(Integer.toString(rs.getInt("BILL1")));
                this.eod_bill5.setText(Integer.toString(rs.getInt("BILL5")));
                this.eod_bill10.setText(Integer.toString(rs.getInt("BILL10")));
                this.eod_bill20.setText(Integer.toString(rs.getInt("BILL20")));
                this.eod_bill50.setText(Integer.toString(rs.getInt("BILL50")));
                this.eod_bill100.setText(Integer.toString(rs.getInt("BILL100")));
                this.tabbedPanel.setSelectedIndex(1);
                totalEOD = this.calcTotals();
                this.totalCash.setText(new DecimalFormat("#.00").format(totalEOD));
                this.setAllTotals();
                EODset = true;
                return true;
            }
        }
        catch(SQLException e)
        {
           MessageInf msg = new MessageInf(MessageInf.SGN_NOTICE, "There was an error getting Start of Day totals from the Database.", e);
                msg.show(this);
            return false;
        }
    }                                              
    
    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        if(JOptionPane.showConfirmDialog(this, "Are you sure you want to accept these totals for " + (this.eodPanel.isShowing() ? "End of Day?" : "Start of Day?")
                , "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) != JOptionPane.YES_OPTION)
            return;
                
        if(this.allFieldsValid())
        {
            generateList();
            this.calcTotals();
            this.pm.setVarianceAmt(totalEOD-(totalSOD+cashSales));
            m_closingTotals = (totalEOD-(totalSOD+cashSales));
            if(m_closingTotals != 0.00 && eodPanel.isShowing())
            {
               if(JOptionPane.showConfirmDialog(this, "Are you sure you wish to continue with a variance of " + new DecimalFormat("$0.00").format(m_closingTotals) + "?"
                , "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION)
               {
                   return;
               } 
            }
          try{
           if(SODset && EODset)
           {
               if(JOptionPane.showConfirmDialog(this, "Are you sure you wish to edit this Cash Drawer session?"
                , "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION)
               {
                   System.out.println(SODid + "  |  " + EODid);
                   this.tabbedPanel.setSelectedIndex(0);
                   SQL = "UPDATE DRAWERFLOAT SET "+
                           "ROLL1="+sod_roll1.getText()+","+
                           "ROLL5="+sod_roll5.getText()+","+
                           "ROLL10="+sod_roll10.getText()+","+
                           "ROLL25="+sod_roll25.getText()+","+
                           "C1="+sod_coin1.getText()+","+
                           "C5="+sod_coin5.getText()+","+
                           "C10="+sod_coin10.getText()+","+
                           "C25="+sod_coin25.getText()+","+
                           "BILL1="+sod_bill1.getText()+","+
                           "BILL5="+sod_bill5.getText()+","+
                           "BILL10="+sod_bill10.getText()+","+
                           "BILL20="+sod_bill20.getText()+","+
                           "BILL50="+sod_bill50.getText()+","+
                           "BILL100="+sod_bill100.getText()+","+
                           "BANKDEPOSIT="+m_bankDeposit+","+
                           "TOTAL="+this.calcTotals()+" "+
                           "WHERE ID = "+SODid;
                   stmt.executeUpdate(SQL);
                   
                   this.tabbedPanel.setSelectedIndex(1);
                   SQL = "UPDATE DRAWERFLOAT SET "+
                           "ROLL1="+eod_roll1.getText()+","+
                           "ROLL5="+eod_roll5.getText()+","+
                           "ROLL10="+eod_roll10.getText()+","+
                           "ROLL25="+eod_roll25.getText()+","+
                           "C1="+eod_coin1.getText()+","+
                           "C5="+eod_coin5.getText()+","+
                           "C10="+eod_coin10.getText()+","+
                           "C25="+eod_coin25.getText()+","+
                           "BILL1="+eod_bill1.getText()+","+
                           "BILL5="+eod_bill5.getText()+","+
                           "BILL10="+eod_bill10.getText()+","+
                           "BILL20="+eod_bill20.getText()+","+
                           "BILL50="+eod_bill50.getText()+","+
                           "BILL100="+eod_bill100.getText()+","+
                           "BANKDEPOSIT="+m_bankDeposit+","+
                           "TOTAL="+this.calcTotals()+" "+
                           "WHERE ID = "+EODid;
                   stmt.executeUpdate(SQL);
                   JPanelCloseMoney.m_jCloseCash.setEnabled(true);
                   JPanelCloseMoney.m_jCloseCashTop.setEnabled(true);
                   this.dispose();
                   return;
               }
               else
               {
                   return;
               }
           }
        double total = this.calcTotals();      
               SQL="INSERT INTO DRAWERFLOAT (NAME,STARTOFDAY,ROLL1,ROLL5,ROLL10,ROLL25,C1,C5,C10,C25,BILL1,BILL5,BILL10,BILL20,BILL50,BILL100,BANKDEPOSIT, TOTAL)"
                       + " VALUES ('"+username+"',"+
                       (this.eodPanel.isShowing() ? 0 : 1) + "," + 
                       this.getRoll1()+ "," +
                       this.getRoll5()+ "," +
                       this.getRoll10()+ "," +
                       this.getRoll25()+ "," +
                       this.getCoin1()+ "," +
                       this.getCoin5()+ "," +
                       this.getCoin10()+ "," +
                       this.getCoin25()+ "," +
                       this.getBill1()+ "," +
                       this.getBill5()+ "," +
                       this.getBill10()+ "," +
                       this.getBill20()+ "," +
                       this.getBill50()+ "," +
                       this.getBill100()+ "," +
                       this.m_bankDeposit+ "," +
                       total+")"; 
             stmt.executeUpdate(SQL);
            //rs.next();
            
            rs=null;
            con=null;
            JPanelCloseMoney.m_jCloseCash.setEnabled(true);
            JPanelCloseMoney.m_jCloseCashTop.setEnabled(true);
            this.dispose();
            }       
        catch (SQLException e){MessageInf msg = new MessageInf(MessageInf.SGN_NOTICE, "There was an error getting data from the datebase.", e);
                msg.show(this);} 
        }
        else
        {
            MessageInf msg = new MessageInf(MessageInf.SGN_NOTICE, "Not all drawer fields are complete! Please make sure all fields are valid before continuing!", null);
                msg.show(this);
        }
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void cashFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cashFieldKeyTyped
        JTextField jtf = (JTextField)(evt.getSource());
            if(evt.getKeyChar() == '.')
                return;
            try 
            {
                Integer.parseInt(evt.getKeyChar()+"");
                setAllTotals();
            }
            catch(NumberFormatException e)
            {
                if(jtf.getText().length() > 0)
                    jtf.setText(jtf.getText().substring(0,jtf.getText().length()-1));
                revalidate();
            }
    }//GEN-LAST:event_cashFieldKeyTyped

    private void setAllTotals()
    {
        DecimalFormat df = new DecimalFormat(" $0.00");
        if(this.sodPanel.isShowing())
        {
            totalSOD = this.calcTotals();
            totalCash.setText(df.format(totalSOD));
            System.out.println("Calculating SOD totals: " + totalSOD);
        }
        else if(this.eodPanel.isShowing())
        {
            totalEOD = this.calcTotals();
            System.out.println("Calculating EOD totals: " + totalEOD);
            if(bankDeposit_Field.getText().length() > 0)
            {
                m_bankDeposit = Double.parseDouble(bankDeposit_Field.getText());
            }
            totalCash1.setText(df.format(totalEOD-m_bankDeposit));
        }
        if(!this.SODset)
            m_closingTotals = totalEOD-(totalSOD+cashSales);
        this.varienceAmt.setText("Variance: "+df.format(m_closingTotals));
        this.pm.setVarianceAmt(m_closingTotals);
        this.pm.setDepositAmt(m_bankDeposit);
    }
    
    private void cashFieldfocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cashFieldfocusLost
        JTextField jtf = (JTextField)(evt.getSource());
        if(jtf.getText().length() == 0)
        {
            jtf.setText(oldText);
        }
        setAllTotals();
    }//GEN-LAST:event_cashFieldfocusLost

    private void cashFieldfocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cashFieldfocusGained
        JTextField jtf = (JTextField)(evt.getSource());
        oldText = jtf.getText();
        jtf.setText("");
    }//GEN-LAST:event_cashFieldfocusGained

    private void cashFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashFieldsActionPerformed
        setAllTotals();
    }//GEN-LAST:event_cashFieldsActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void dateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateButtonActionPerformed
        Date date = new Date();
        date = JCalendarDialog.showCalendarTimeHours(this, date);
        if (date != null) {
            try{
            Calendar midnight = new GregorianCalendar();
            midnight.setTime(date);
            //midnight.add(Calendar.DAY_OF_MONTH, 1);
            midnight.set(Calendar.HOUR_OF_DAY, 0);
            midnight.set(Calendar.MINUTE, 0);
            midnight.set(Calendar.SECOND, 0);
            midnight.set(Calendar.MILLISECOND, 0);
            
            Calendar midnightT = new GregorianCalendar();
            midnightT.setTime(date);
            midnightT.add(Calendar.DAY_OF_MONTH, 1);
            midnightT.set(Calendar.HOUR_OF_DAY, 0);
            midnightT.set(Calendar.MINUTE, 0);
            midnightT.set(Calendar.SECOND, 0);
            midnightT.set(Calendar.MILLISECOND, 0);
            
            java.sql.Timestamp tomorrowTime = new java.sql.Timestamp(midnightT.getTimeInMillis()); 
            java.sql.Timestamp currTime = new java.sql.Timestamp(midnight.getTimeInMillis()); 
            System.out.println(tomorrowTime.toString() + "  |  "+currTime.toString());
            SQL = "SELECT * FROM DRAWERFLOAT WHERE TIME > '"+ currTime+"' AND TIME < '"+ tomorrowTime+"'";
            stmt = (Statement) con.createStatement();      
            rs = stmt.executeQuery(SQL);
            
            if(!rs.next())
            {
                rs = null;
                MessageInf msg = new MessageInf(MessageInf.SGN_NOTICE, "No Cash Drawer count was found for the specified day.",null);
                msg.show(this);
            }
            else
            {
                do
                {
                    if(rs.getInt("STARTOFDAY") == 1)
                    {
                        this.tabbedPanel.setSelectedIndex(0);
                        this.SODid = rs.getInt("ID");
                        this.sod_roll1.setText(Integer.toString(rs.getInt("ROLL1")));
                        this.sod_roll5.setText(Integer.toString(rs.getInt("ROLL5")));
                        this.sod_roll10.setText(Integer.toString(rs.getInt("ROLL10")));
                        this.sod_roll25.setText(Integer.toString(rs.getInt("ROLL25")));
                        this.sod_coin1.setText(Integer.toString(rs.getInt("C1")));
                        this.sod_coin5.setText(Integer.toString(rs.getInt("C5")));
                        this.sod_coin10.setText(Integer.toString(rs.getInt("C10")));
                        this.sod_coin25.setText(Integer.toString(rs.getInt("C25")));
                        this.sod_bill1.setText(Integer.toString(rs.getInt("BILL1")));
                        this.sod_bill5.setText(Integer.toString(rs.getInt("BILL5")));
                        this.sod_bill10.setText(Integer.toString(rs.getInt("BILL10")));
                        this.sod_bill20.setText(Integer.toString(rs.getInt("BILL20")));
                        this.sod_bill50.setText(Integer.toString(rs.getInt("BILL50")));
                        this.sod_bill100.setText(Integer.toString(rs.getInt("BILL100")));
                        totalSOD = this.calcTotals();
                        this.bankDeposit_Field.setText(Double.toString(rs.getDouble("BANKDEPOSIT")));
                        this.totalCash.setText(new DecimalFormat("#.00").format(totalSOD));
                        this.setAllTotals();
                        SODset = true;
                    }
                    else
                    {
                        this.tabbedPanel.setSelectedIndex(1);
                        this.EODid = rs.getInt("ID");
                        this.eod_roll1.setText(Integer.toString(rs.getInt("ROLL1")));
                        this.eod_roll5.setText(Integer.toString(rs.getInt("ROLL5")));
                        this.eod_roll10.setText(Integer.toString(rs.getInt("ROLL10")));
                        this.eod_roll25.setText(Integer.toString(rs.getInt("ROLL25")));
                        this.eod_coin1.setText(Integer.toString(rs.getInt("C1")));
                        this.eod_coin5.setText(Integer.toString(rs.getInt("C5")));
                        this.eod_coin10.setText(Integer.toString(rs.getInt("C10")));
                        this.eod_coin25.setText(Integer.toString(rs.getInt("C25")));
                        this.eod_bill1.setText(Integer.toString(rs.getInt("BILL1")));
                        this.eod_bill5.setText(Integer.toString(rs.getInt("BILL5")));
                        this.eod_bill10.setText(Integer.toString(rs.getInt("BILL10")));
                        this.eod_bill20.setText(Integer.toString(rs.getInt("BILL20")));
                        this.eod_bill50.setText(Integer.toString(rs.getInt("BILL50")));
                        this.eod_bill100.setText(Integer.toString(rs.getInt("BILL100")));
                        totalEOD = this.calcTotals();
                        this.totalCash.setText(new DecimalFormat("#.00").format(totalEOD));
                        this.setAllTotals();
                        EODset = true;
                    }
                }while(rs.next());
            }
            } catch(SQLException e)
            {
               MessageInf msg = new MessageInf(MessageInf.SGN_NOTICE, "There was an error getting a drawer for the given date.", e);
                msg.show(this);
            }
        }

    }//GEN-LAST:event_dateButtonActionPerformed

    private void tabbedPanelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabbedPanelFocusGained
        if(this.eodPanel.isShowing())
            this.totalCash.setText(new DecimalFormat("0.00").format(this.calcTotals()));
        else
            this.totalCash1.setText(new DecimalFormat("0.00").format(this.calcTotals()));
    }//GEN-LAST:event_tabbedPanelFocusGained

    private void lastSODActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastSODActionPerformed
        SQL = "SELECT * FROM DRAWERFLOAT WHERE ID = (SELECT MAX(ID) FROM DRAWERFLOAT WHERE STARTOFDAY = 0)";
        try
        {
            stmt = (Statement) con.createStatement();      
            rs = stmt.executeQuery(SQL);            
            if(!rs.next())
            {
                rs = null;
                MessageInf msg = new MessageInf(MessageInf.SGN_NOTICE, "There was an error retrieving entry from server.",null);
                msg.show(this);
            }
            else
            {
                        this.tabbedPanel.setSelectedIndex(0);
                        this.SODid = rs.getInt("ID");
                        this.sod_roll1.setText(Integer.toString(rs.getInt("ROLL1")));
                        this.sod_roll5.setText(Integer.toString(rs.getInt("ROLL5")));
                        this.sod_roll10.setText(Integer.toString(rs.getInt("ROLL10")));
                        this.sod_roll25.setText(Integer.toString(rs.getInt("ROLL25")));
                        this.sod_coin1.setText(Integer.toString(rs.getInt("C1")));
                        this.sod_coin5.setText(Integer.toString(rs.getInt("C5")));
                        this.sod_coin10.setText(Integer.toString(rs.getInt("C10")));
                        this.sod_coin25.setText(Integer.toString(rs.getInt("C25")));
                        this.sod_bill1.setText(Integer.toString(rs.getInt("BILL1")));
                        this.sod_bill5.setText(Integer.toString(rs.getInt("BILL5")));
                        this.sod_bill10.setText(Integer.toString(rs.getInt("BILL10")));
                        this.sod_bill20.setText(Integer.toString(rs.getInt("BILL20")));
                        this.sod_bill50.setText(Integer.toString(rs.getInt("BILL50")));
                        this.sod_bill100.setText(Integer.toString(rs.getInt("BILL100")));
                        totalSOD = this.calcTotals();
                        this.bankDeposit_Field.setText(Double.toString(rs.getDouble("BANKDEPOSIT")));
                        this.totalCash.setText(new DecimalFormat("#.00").format(totalSOD));
                        this.setAllTotals();
                        SODset = true;
            }
        } catch(SQLException e)
            {
               MessageInf msg = new MessageInf(MessageInf.SGN_NOTICE, "There was an error getting the last entry in the table", e);
                msg.show(this);
            }
    }//GEN-LAST:event_lastSODActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameCountDrawer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JFrameCountDrawer(con).setVisible(true);
            }
        });
    }
    
    private void generateList()
    {
        List<DrawerLine> list = new ArrayList<>();
        
        list.add(new DrawerLine("Start of Day ","",0));
        list.add(new DrawerLine("  Roll ","0.01",Integer.parseInt(this.sod_roll1.getText())));
        list.add(new DrawerLine("  Roll ","0.05",Integer.parseInt(this.sod_roll5.getText())));
        list.add(new DrawerLine("  Roll ","0.10",Integer.parseInt(this.sod_roll10.getText())));
        list.add(new DrawerLine("  Roll ","0.25",Integer.parseInt(this.sod_roll25.getText())));
        list.add(new DrawerLine("  Coin ","0.01",Integer.parseInt(this.sod_coin1.getText())));
        list.add(new DrawerLine("  Coin ","0.05",Integer.parseInt(this.sod_coin5.getText())));
        list.add(new DrawerLine("  Coin ","0.10",Integer.parseInt(this.sod_coin10.getText())));
        list.add(new DrawerLine("  Coin ","0.25",Integer.parseInt(this.sod_coin25.getText())));
        list.add(new DrawerLine("  Coin ","0.01",Integer.parseInt(this.sod_coin1.getText())));
        list.add(new DrawerLine("  Bill ","1.00",Integer.parseInt(this.sod_bill1.getText())));
        list.add(new DrawerLine("  Bill ","5.00",Integer.parseInt(this.sod_bill5.getText())));
        list.add(new DrawerLine("  Bill ","10.00",Integer.parseInt(this.sod_bill10.getText())));
        list.add(new DrawerLine("  Bill ","20.00",Integer.parseInt(this.sod_bill20.getText())));
        list.add(new DrawerLine("  Bill ","50.00",Integer.parseInt(this.sod_bill50.getText())));
        list.add(new DrawerLine("  Bill ","100.00",Integer.parseInt(this.sod_bill100.getText())));
        list.add(new DrawerLine("End of Day ","",0));
        list.add(new DrawerLine("  Roll ","0.01",Integer.parseInt(this.eod_roll1.getText())));
        list.add(new DrawerLine("  Roll ","0.05",Integer.parseInt(this.eod_roll5.getText())));
        list.add(new DrawerLine("  Roll ","0.10",Integer.parseInt(this.eod_roll10.getText())));
        list.add(new DrawerLine("  Roll ","0.25",Integer.parseInt(this.eod_roll25.getText())));
        list.add(new DrawerLine("  Coin ","0.01",Integer.parseInt(this.eod_coin1.getText())));
        list.add(new DrawerLine("  Coin ","0.05",Integer.parseInt(this.eod_coin5.getText())));
        list.add(new DrawerLine("  Coin ","0.10",Integer.parseInt(this.eod_coin10.getText())));
        list.add(new DrawerLine("  Coin ","0.25",Integer.parseInt(this.eod_coin25.getText())));
        list.add(new DrawerLine("  Coin ","0.01",Integer.parseInt(this.eod_coin1.getText())));
        list.add(new DrawerLine("  Bill ","1.00",Integer.parseInt(this.eod_bill1.getText())));
        list.add(new DrawerLine("  Bill ","5.00",Integer.parseInt(this.eod_bill5.getText())));
        list.add(new DrawerLine("  Bill ","10.00",Integer.parseInt(this.eod_bill10.getText())));
        list.add(new DrawerLine("  Bill ","20.00",Integer.parseInt(this.eod_bill20.getText())));
        list.add(new DrawerLine("  Bill ","50.00",Integer.parseInt(this.eod_bill50.getText())));
        list.add(new DrawerLine("  Bill ","100.00",Integer.parseInt(this.eod_bill100.getText())));        
        this.pm.setDrawerList(list);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JTextField bankDeposit_Field;
    private javax.swing.JButton dateButton;
    private javax.swing.JPanel eodPanel;
    private javax.swing.JTextField eod_bill1;
    private javax.swing.JTextField eod_bill10;
    private javax.swing.JTextField eod_bill100;
    private javax.swing.JTextField eod_bill20;
    private javax.swing.JTextField eod_bill5;
    private javax.swing.JTextField eod_bill50;
    private javax.swing.JTextField eod_coin1;
    private javax.swing.JTextField eod_coin10;
    private javax.swing.JTextField eod_coin25;
    private javax.swing.JTextField eod_coin5;
    private javax.swing.JTextField eod_roll1;
    private javax.swing.JTextField eod_roll10;
    private javax.swing.JTextField eod_roll25;
    private javax.swing.JTextField eod_roll5;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JButton lastSOD;
    private javax.swing.JPanel sodPanel;
    private javax.swing.JTextField sod_bill1;
    private javax.swing.JTextField sod_bill10;
    private javax.swing.JTextField sod_bill100;
    private javax.swing.JTextField sod_bill20;
    private javax.swing.JTextField sod_bill5;
    private javax.swing.JTextField sod_bill50;
    private javax.swing.JTextField sod_coin1;
    private javax.swing.JTextField sod_coin10;
    private javax.swing.JTextField sod_coin25;
    private javax.swing.JTextField sod_coin5;
    private javax.swing.JTextField sod_roll1;
    private javax.swing.JTextField sod_roll10;
    private javax.swing.JTextField sod_roll25;
    private javax.swing.JTextField sod_roll5;
    private javax.swing.JTabbedPane tabbedPanel;
    private javax.swing.JLabel totalCash;
    private javax.swing.JLabel totalCash1;
    private javax.swing.JLabel varienceAmt;
    // End of variables declaration//GEN-END:variables
public String getBill1(){
    return (this.eodPanel.isShowing() ? eod_bill1.getText() : sod_bill1.getText());
}
public String getBill5(){
    return (this.eodPanel.isShowing() ? eod_bill5.getText() : sod_bill5.getText());
}
public String getBill10(){
    return (this.eodPanel.isShowing() ? eod_bill10.getText() : sod_bill10.getText());
}
public String getBill20(){
    return (this.eodPanel.isShowing() ? eod_bill20.getText() : sod_bill20.getText());
}
public String getBill50(){
    return (this.eodPanel.isShowing() ? eod_bill50.getText() : sod_bill50.getText());
}
public String getBill100(){
    return (this.eodPanel.isShowing() ? eod_bill100.getText() : sod_bill100.getText());
}

public String getCoin1(){
    return (this.eodPanel.isShowing() ? eod_coin1.getText() : sod_coin1.getText());
}
public String getCoin5(){
    return (this.eodPanel.isShowing() ? eod_coin5.getText() : sod_coin5.getText());
}
public String getCoin10(){
    return (this.eodPanel.isShowing() ? eod_coin10.getText() : sod_coin10.getText());
}
public String getCoin25(){
    return (this.eodPanel.isShowing() ? eod_coin25.getText() : sod_coin25.getText());
}

public String getRoll1(){
    return (this.eodPanel.isShowing() ? eod_roll1.getText() : sod_roll1.getText());
}
public String getRoll5(){
    return (this.eodPanel.isShowing() ? eod_roll5.getText() : sod_roll5.getText());
}
public String getRoll10(){
    return (this.eodPanel.isShowing() ? eod_roll10.getText() : sod_roll10.getText());
}
public String getRoll25(){
    return (this.eodPanel.isShowing() ? eod_roll25.getText() : sod_roll25.getText());
}


}

